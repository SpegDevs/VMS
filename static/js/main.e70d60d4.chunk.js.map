{"version":3,"sources":["pages/Ide.module.css","components/SideTools/SideTools.module.css","components/SideItems/SideItems.module.css","components/Workspace/Workspace.module.css","components/Modals/Modal.module.css","components/ActionItem/ActionItem.js","components/Action/Action.js","utils/ItemTypes.js","components/SideItems/SideItems.js","utils/ComponentType.js","components/SideTools/SideTools.js","components/Modals/IfModal/IfModal.js","components/Modals/DeclareModal/DeclareModal.js","components/Modals/AsignModal/AsignModal.js","components/FlowChartWrapper/FlowWrapper.js","components/Modals/IOModal/IOModal.js","components/Workspace/Workspace.js","pages/Ide.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","ActionItem","props","className","id","name","onClick","action","code","download","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","names","icon","Action","map","item","index","key","React","Component","SideItem","useDrag","type","ItemTypes","collect","monitor","opacity","isDragging","dragRef","ref","item_logo","src","img","alt","title","data","ComponentType","SideTools","wrapper","main","backend","HTML5Backend","coverBar","IfModal","Modal","isOpen","toggle","modal","ModalHeader","tag","tooltip","tooltipText","tutorial","ModalBody","ifBody","htmlFor","Input","ModalFooter","Button","color","sucess","querySelector","value","types","variableType","initState","isArray","DeclareModal","state","changeArray","bind","newState","this","setState","onChange","e","target","options","selectedIndex","placeholder","min","declaretion","AsignModal","x","y","fill","scale","symbols","start","end","FlowWrapper","reduce","prev","current","chartCode","initialState","isInput","IOModal","inputChangeHandler","WorkspacePane","useDrop","accept","drop","handler","workspace","text","isIfOpen","isDeclareOpen","isAsignOpen","isIterationOpen","isSelectingArray","isIOOpen","count","flowCode","Workspace","toggleModals","pushToCode","pushIf","pushDeclare","pushAsign","selectingArray","pushIO","input","prevEnd","length","statement","newStart","split","newEnd","pop","push","addToCode","error","info","moeCode","Ide","styles","sidebar","logo","tools","env","actions","Boolean","window","location","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e70d60d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Ide_sidebar__ADrPC\",\"logo\":\"Ide_logo__3mkxC\",\"env\":\"Ide_env__1rt9U\",\"actions\":\"Ide_actions__lRmzn\",\"workspace\":\"Ide_workspace__AiCY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SideTools_wrapper__1s6vx\",\"main\":\"SideTools_main__2cUTv\",\"coverBar\":\"SideTools_coverBar__1DtbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SideItems_item__3VAvx\",\"item_logo\":\"SideItems_item_logo__11pdu\",\"title\":\"SideItems_title__uDhnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"workspace\":\"Workspace_workspace__wldad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Modal_tooltip__32SUo\",\"tooltipText\":\"Modal_tooltipText__AL2OT\",\"sucess\":\"Modal_sucess__1RJV8\",\"ifBody\":\"Modal_ifBody__3cL2f\"};","import React from \"react\";\nimport './ActionItem.module.css';\n\nexport const ActionItem = props => {\n  return <i className=\"material-icons\" id={props.name} onClick={() => {\n    props.action(props.code)\n  }}>{props.name}</i>;\n};\n","import React from \"react\";\nimport { ActionItem } from \"./../ActionItem/ActionItem\";\nimport \"./Action.module.css\";\n\nconst downloadFile = (code) => {\n  download(code);\n}\n\nconst download = (code) => {\n  const element = document.createElement('a');;\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(code));\n  element.setAttribute('download', 'code.moe');\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nconst names = [{\n  icon: \"play_arrow\",\n  action: \"play\"\n}, {\n  icon: \"bug_report\",\n  action: \"debug\"\n},\n{\n  icon: \"stop\",\n  action: \"stop\"\n}, {\n  icon: \"file_download\",\n  action: downloadFile,\n}];\n\nexport class Action extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <ul>\n        {names.map((item, index) => {\n          if (item.action)\n            return <ActionItem name={item.icon} code={this.props.code} action={item.action} key={index} />;\n        })}\n      </ul>\n    );\n  }\n}\n","export default {\n  COMPONENT: \"component\"\n};\n","import React from \"react\";\nimport style from \"./SideItems.module.css\";\nimport { useDrag } from \"react-dnd\";\nimport ItemTypes from \"../../utils/ItemTypes\";\n\nexport const SideItem = props => {\n  const [{ opacity }, dragRef] = useDrag({\n    item: { type: ItemTypes.COMPONENT, id: props.item.id },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.5 : 1\n    })\n  });\n\n  return (\n    <div className={style.item} ref={dragRef} style={{ opacity }}>\n      <div className={style.item_logo}>\n        <img src={props.item.img} alt={props.item.title} />\n      </div>\n      <div className={style.title}>\n        <p>{props.item.title}</p>\n      </div>\n    </div>\n  );\n};\n","export default {\n  IF: \"IF\",\n  DECLARE: \"DECLARE\",\n  ASIGN: \"ASIGN\",\n  ITERATION: \"ITERATION\",\n  IO: \"IO\",\n  INPUT: \"IN\",\n  OUTPUT: \"OUT\",\n};\n","import React from \"react\";\nimport style from \"./SideTools.module.css\";\nimport { SideItem } from \"./../SideItems/SideItems\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport ComponentType from \"../../utils/ComponentType\";\n\nconst data = [\n  { id: ComponentType.IF, img: \"/img/IF.png\", title: \"if\" },\n  { id: ComponentType.DECLARE, img: \"/img/declare.png\", title: \"declare\" },\n  { id: ComponentType.ASIGN, img: \"/img/operation.png\", title: \"asign\" },\n  {\n    id: ComponentType.ITERATION,\n    img: \"/img/iteration.png\",\n    title: \"iteration\"\n  },\n  { id: ComponentType.IO, img: \"/img/asign.png\", title: \"IO\" },\n];\n\nexport const SideTools = props => {\n  return (\n    <div className={style.wrapper}>\n      <div className={style.main}>\n        {data.map((item, index) => {\n          return (\n            <DndProvider backend={HTML5Backend} key={index}>\n              <SideItem item={item} />\n            </DndProvider>\n          );\n        })}\n      </div>\n      <div className={style.coverBar}></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input\n} from \"reactstrap\";\nimport ComponentType from \"../../../utils/ComponentType\";\nimport style from \"./../Modal.module.css\";\n\nexport const IfModal = props => {\n    return (\n      <Modal isOpen={props.isOpen} toggle={props.toggle} className={style.modal}>\n        <ModalHeader tag=\"div\">\n          <h3>If statement</h3>\n          <div className={style.tooltip}>\n            <i className=\"material-icons\">info_outline</i>\n            <span className={style.tooltipText}>{props.tutorial}</span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <div className={style.ifBody}>\n            <label htmlFor=\"condition\">Enter a condition</label>\n            <Input type=\"text\" id=\"condition\"></Input>\n          </div>\n        </ModalBody>\n        <Modal></Modal>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={() => {\n              props.toggle(ComponentType.IF);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            className={style.sucess}\n            onClick={() => {\n              props.toggle(\n                ComponentType.IF,\n                document.querySelector(\"#condition\").value\n              );\n            }}\n          >\n            Continue\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };","import React from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Input\n} from \"reactstrap\";\nimport ComponentType from \"../../../utils/ComponentType\";\nimport style from \"./../Modal.module.css\";\n\nconst types = [\"int\", \"dec\", \"str\", \"char\", \"bool\"];\nconst variableType = [\"variable\", \"array\"];\n\nconst initState = {\n    isArray: false,\n}\n\nexport class DeclareModal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { ...initState }\n        this.changeArray = this.changeArray.bind(this);\n    }\n\n\n    changeArray(value) {\n        const newState = value === variableType[1];\n        this.setState({\n            ...this.state,\n            isArray: newState\n        });\n    }\n\n    render() {\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle}>\n                <ModalHeader tag=\"div\">\n                    <h3>Declare statement</h3>\n                    <div className={style.tooltip}>\n                        <i className=\"material-icons\">info_outline</i>\n                        <span className={style.tooltipText}>{this.props.tutorial}</span>\n                    </div>\n                </ModalHeader>\n                <ModalBody>\n                    <h3>Declaration</h3>\n                    <div>\n                        <label htmlFor=\"declare\">Enter a variable</label>\n                        <Input\n                            type=\"select\"\n                            id=\"declareVariable\"\n                            onChange={e => {\n                                this.changeArray(e.target.options[e.target.selectedIndex].value)\n                            }}\n                        >\n                            {variableType.map((element, index) => {\n                                return (\n                                    <option value={element} key={index}>\n                                        {element}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                        <Input type=\"select\" id=\"declareType\">\n                            {types.map((element, index) => {\n                                return (\n                                    <option value={element} key={index}>\n                                        {element}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                        {this.state.isArray && (\n                            <Input\n                                type=\"number\"\n                                id=\"arrayLength\"\n                                placeholder=\"Array size\"\n                                min=\"1\"\n                            />\n                        )}\n                        <Input type=\"text\" id=\"declare\" />\n                    </div>\n                </ModalBody>\n                <Modal></Modal>\n                <ModalFooter>\n                    <Button\n                        color=\"danger\"\n                        onClick={() => {\n                            this.props.toggle(ComponentType.DECLARE);\n                            this.setState({\n                                isArray: false,\n                            })\n                        }}\n                    >\n                        Cancel\n            </Button>\n                    <Button\n                        className={style.sucess}\n                        onClick={() => {\n                            const e = document.querySelector(\"#declareType\");\n                            const value = document.querySelector(\"#declare\").value;\n                            let declaretion = \"\";\n                            const type = e.options[e.selectedIndex].value;\n                            if (this.state.isArray) {\n                                declaretion = `arr[${type}, ${document.querySelector(\"#arrayLength\").value}] ${value}`\n                            } else {\n                                declaretion = `${type} ${value}`\n                            }\n                            this.props.toggle(ComponentType.DECLARE, declaretion);\n                            this.setState({\n                                isArray: false,\n                            })\n                        }}\n                    >\n                        Continue\n            </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n};","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input\n} from \"reactstrap\";\nimport ComponentType from \"../../../utils/ComponentType\";\nimport style from \"./../Modal.module.css\";\n\nexport const AsignModal = props => {\n    return (\n      <Modal isOpen={props.isOpen} toggle={props.toggle}>\n        <ModalHeader tag=\"div\">\n          <h3>Asign statement</h3>\n          <div className={style.tooltip}>\n            <i className=\"material-icons\">info_outline</i>\n            <span className={style.tooltipText}>{props.tutorial}</span>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <h3>Asign</h3>\n          <div>\n            <label htmlFor=\"asign\">Asign a variable a value</label>\n            <Input type=\"text\" id=\"asign\"></Input>\n          </div>\n        </ModalBody>\n        <Modal></Modal>\n        <ModalFooter>\n          <Button\n            color=\"danger\"\n            onClick={() => {\n              props.toggle(ComponentType.ASIGN);\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            className={style.sucess}\n            onClick={() => {\n              props.toggle(\n                ComponentType.ASIGN,\n                document.querySelector(\"#asign\").value\n              );\n            }}\n          >\n            Continue\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  };\n  ","import React from \"react\";\nimport FlowChart from \"react-simple-flowchart\";\n\nconst options = {\n  x: 0,\n  y: 0,\n  \"line-width\": 3,\n  \"line-length\": 50,\n  \"text-margin\": 10,\n  \"font-size\": 14,\n  \"font-color\": \"white\",\n  \"line-color\": \"#222831\",\n  \"element-color\": \"1e9ba0\",\n  fill: \"var(--primary-dark)\",\n  \"yes-text\": \"yes\",\n  \"no-text\": \"no\",\n  \"arrow-end\": \"block\",\n  scale: 1,\n  symbols: {\n    start: {\n      \"font-color\": \"white\",\n      \"element-color\": \"#1e9ba0\",\n      \"font-weight\": \"bold\"\n    },\n    end: {\n      \"font-color\": \"white\",\n      \"element-color\": \"#1e9ba0\",\n      \"font-weight\": \"bold\"\n    }\n  }\n};\n\nexport const FlowWrapper = props => {\n  const code = props.code.reduce((prev, current) => {\n    return `${prev}\n    ${current}`;\n  }, ``);\n  return <FlowChart chartCode={code} options={options} />;\n};\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input\n} from \"reactstrap\";\nimport ComponentType from \"../../../utils/ComponentType\";\nimport style from \"./../Modal.module.css\";\n\nconst type = [\"Input\",\"Output\"];\n\nconst initialState = {\n    isInput:true,\n}\n\nexport class IOModal extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={...initialState};\n        this.inputChangeHandler=this.inputChangeHandler.bind(this);\n    }\n\n    inputChangeHandler(value){\n        const newState = value===type[0];\n        this.setState({\n            ...this.state,\n            isInput:newState\n        });\n    }\n\n    render(){\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} className={style.modal}>\n              <ModalHeader tag=\"div\">\n                <h3>Input - Output statement</h3>\n                <div className={style.tooltip}>\n                  <i className=\"material-icons\">info_outline</i>\n                  <span className={style.tooltipText}>{this.props.tutorial}</span>\n                </div>\n              </ModalHeader>\n              <ModalBody>\n                <div className={style.ifBody}>\n                  <label htmlFor=\"type\">Enter a condition</label>\n                  <Input type=\"select\" id=\"type\" onChange={(e)=>{\n                      this.inputChangeHandler(e.target.options[e.target.selectedIndex].value)\n                  }}>\n                      {type.map((element, index)=>{\n                          return <option key={index} value={element}>{element}</option>\n                      })}\n                  </Input>\n                  {this.state.isInput && <Input id=\"variable\" placeholder=\"Enter a variable\"/>}\n                  <Input id=\"input\" placeholder=\"Enter a text\"/>\n                </div>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  color=\"danger\"\n                  onClick={() => {\n                    this.props.toggle(ComponentType.IO);\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  className={style.sucess}\n                  onClick={() => {\n                      \n                      if(this.state.isInput){\n                        this.props.toggle(\n                            ComponentType.INPUT,\n                            `${document.querySelector(\"#variable\").value}=in(${document.querySelector(\"#input\").value})`    \n                        );\n                      }else{\n                        this.props.toggle(\n                            ComponentType.INPUT,\n                            `out(${document.querySelector(\"#input\").value})`    \n                        );\n                      }\n                    \n                  }}\n                >\n                  Continue\n                </Button>\n              </ModalFooter>\n            </Modal>\n          );\n    }\n    \n};","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ItemTypes from \"../../utils/ItemTypes\";\nimport style from \"./Workspace.module.css\";\nimport ComponentType from \"../../utils/ComponentType\";\nimport { IfModal } from \"./../Modals/IfModal/IfModal\";\nimport { DeclareModal } from \"./../Modals/DeclareModal/DeclareModal\";\nimport { AsignModal } from \"./../Modals/AsignModal/AsignModal\";\nimport { FlowWrapper } from \"../FlowChartWrapper/FlowWrapper\";\nimport { IOModal } from \"../Modals/IOModal/IOModal\";\n\nconst tutorial = {\n    IF: `Enter an logic expresion such as x>10.\\nValid expresions: >, <, >=, <=, ==, !=, !, &&, ||`,\n    DECLARE:\n        \"Select a variable type and name it, you can create multiple variables of the same type separating them with a comma\",\n    ASIGN:\n        \"Asign a value to an existing variable, you can do multiple asignments separating them with an semicolon with no space\",\n    IO:\n        \"Select input if you want write a text or number or output if you want to print a variable or a plain text\"\n};\n\nconst WorkspacePane = props => {\n    const [_, drop] = useDrop({\n        accept: ItemTypes.COMPONENT,\n        drop: item => {\n            props.handler(item.id);\n        }\n    });\n    return (\n        <div ref={drop} className={style.workspace}>\n            <FlowWrapper code={props.code} />\n        </div>\n    );\n};\n\nconst initialState = {\n    text: \"\",\n    isIfOpen: false,\n    isDeclareOpen: false,\n    isAsignOpen: false,\n    isIterationOpen: false,\n    isSelectingArray: false,\n    isIOOpen: false,\n    count: 0,\n    flowCode: [\"start=>start: start\", \"end=>end: end\", \"start->end\"],\n};\n\nclass Workspace extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...initialState };\n        this.toggleModals = this.toggleModals.bind(this);\n        this.pushToCode = this.pushToCode.bind(this);\n        this.pushIf = this.pushIf.bind(this);\n        this.pushDeclare = this.pushDeclare.bind(this);\n        this.pushAsign = this.pushAsign.bind(this);\n        this.selectingArray = this.selectingArray.bind(this);\n        this.pushIO = this.pushIO.bind(this);\n    }\n\n    toggleModals(type, input = \"\") {\n        let code = this.props.code;\n        switch (type) {\n            case ComponentType.IF:\n                if (input !== \"\") {\n                    const flowCode = this.state.flowCode;\n                    const prevEnd = flowCode[flowCode.length - 1];\n                    const statement = `cond${this.state.count}=>condition: ${input}`;\n                    const newStart = `${prevEnd.split(\"->\")[0]}->cond${this.state.count}`;\n                    const newEnd = `cond${this.state.count}(yes)->${\n                        prevEnd.split(\"->\")[1]\n                        }`;\n                    flowCode.pop();\n                    flowCode.push(statement);\n                    flowCode.push(newStart);\n                    flowCode.push(`cond${this.state.count}(no)->end`);\n                    flowCode.push(newEnd);\n                    this.setState({\n                        ...this.state,\n                        flowCode\n                    });\n                }\n                this.setState({\n                    ...this.state,\n                    isIfOpen: !this.state.isIfOpen,\n                    count: this.state.count + 1\n                });\n                break;\n            case ComponentType.DECLARE:\n                if (input !== \"\") {\n                    const flowCode = this.state.flowCode;\n                    const prevEnd = flowCode[flowCode.length - 1];\n                    const statement = `declare${this.state.count}=>operation: ${input}`;\n                    const newEnd = `${prevEnd.split(\"->\")[0]}->declare${\n                        this.state.count\n                        }`;\n                    const newStart = `declare${this.state.count}->${\n                        prevEnd.split(\"->\")[1]\n                        }`;\n                    flowCode.pop();\n                    flowCode.push(statement);\n                    flowCode.push(newEnd);\n                    flowCode.push(newStart);\n                    code = `${code}\\n${input};`;\n                }\n                this.setState({\n                    ...this.state,\n                    isDeclareOpen: !this.state.isDeclareOpen,\n                    count: this.state.count + 1,\n                    isSelectingArray: false,\n                });\n                this.props.addToCode(code);\n                break;\n            case ComponentType.ASIGN:\n                if (input !== \"\") {\n                    const flowCode = this.state.flowCode;\n                    const flowCodeAux = [...flowCode];\n                    const prevEnd = flowCode[flowCode.length - 1];\n                    const statement = `asign${this.state.count}=>subroutine: ${input}`;\n                    const newEnd = `${prevEnd.split(\"->\")[0]}->asign${this.state.count}`;\n                    const newStart = `asign${this.state.count}->${\n                        prevEnd.split(\"->\")[1]\n                        }`;\n                    flowCode.pop();\n                    flowCode.push(statement);\n                    flowCode.push(newEnd);\n                    flowCode.push(newStart);\n                    code = `${code}\\n${input};`;\n                }\n                this.setState({\n                    ...this.state,\n                    isAsignOpen: !this.state.isAsignOpen,\n                    count: this.state.count + 1,\n                });\n                this.props.addToCode(code);\n                break;\n            case ComponentType.OUTPUT:\n                if (input !== \"\") {\n                    const flowCode = this.state.flowCode;\n                    const flowCodeAux = [...flowCode];\n                    const prevEnd = flowCode[flowCode.length - 1];\n                    const statement = `out${this.state.count}=>inputoutput: ${input}`;\n                    const newEnd = `${prevEnd.split(\"->\")[0]}->out${this.state.count}`;\n                    const newStart = `out${this.state.count}->${\n                        prevEnd.split(\"->\")[1]\n                        }`;\n                    flowCode.pop();\n                    flowCode.push(statement);\n                    flowCode.push(newEnd);\n                    flowCode.push(newStart);\n                    code = `${code}\\n${input};`;\n                }\n                this.setState({\n                    ...this.state,\n                    isIOOpen: !this.state.isIOOpen,\n                    count: this.state.count + 1,\n                });\n                this.props.addToCode(code);\n                break;\n            case ComponentType.INPUT:\n                if (input !== \"\") {\n                    const flowCode = this.state.flowCode;\n                    const flowCodeAux = [...flowCode];\n                    const prevEnd = flowCode[flowCode.length - 1];\n                    const statement = `in${this.state.count}=>inputoutput: ${input}`;\n                    const newEnd = `${prevEnd.split(\"->\")[0]}->in${this.state.count}`;\n                    const newStart = `in${this.state.count}->${\n                        prevEnd.split(\"->\")[1]\n                        }`;\n                    flowCode.pop();\n                    flowCode.push(statement);\n                    flowCode.push(newEnd);\n                    flowCode.push(newStart);\n                    code = `${code}\\n${input};`;\n                }\n                this.setState({\n                    ...this.state,\n                    isIOOpen: !this.state.isIOOpen,\n                    count: this.state.count + 1,\n                });\n                this.props.addToCode(code);\n                break;\n        }\n    }\n\n    pushIf() {\n        this.setState({\n            ...this.state,\n            isIfOpen: true\n        });\n    }\n\n    pushDeclare() {\n        this.setState({\n            ...this.state,\n            isDeclareOpen: true\n        });\n    }\n\n    pushAsign() {\n        this.setState({\n            ...this.state,\n            isAsignOpen: true\n        });\n    }\n\n    selectingArray(value) {\n        this.setState({\n            ...this.state,\n            isSelectingArray: value\n        });\n    }\n\n    pushIO() {\n        this.setState({\n            ...this.state,\n            isIOOpen: true\n        });\n    }\n\n    pushToCode(id) {\n        switch (id) {\n            case ComponentType.IF:\n                this.pushIf();\n                break;\n            case ComponentType.DECLARE:\n                this.pushDeclare();\n                break;\n            case ComponentType.ASIGN:\n                this.pushAsign();\n                break;\n            case ComponentType.ITERATION:\n                break;\n            case ComponentType.IO:\n                this.pushIO();\n                break;\n        }\n    }\n\n    componentDidCatch(error, info) { }\n\n    render() {\n        return (\n            <>\n                <IfModal\n                    isOpen={this.state.isIfOpen}\n                    toggle={this.toggleModals}\n                    tutorial={tutorial.IF}\n                />\n                <DeclareModal\n                    isOpen={this.state.isDeclareOpen}\n                    toggle={this.toggleModals}\n                    tutorial={tutorial.DECLARE}\n                    selectingArray={this.selectingArray}\n                    isSelectingArray={this.state.isSelectingArray}\n                />\n                <AsignModal\n                    isOpen={this.state.isAsignOpen}\n                    toggle={this.toggleModals}\n                    tutorial={tutorial.ASIGN}\n                />\n                <IOModal\n                    isOpen={this.state.isIOOpen}\n                    toggle={this.toggleModals}\n                    tutorial={tutorial.IO} />\n                <WorkspacePane\n                    handler={this.pushToCode}\n                    text={this.state.text}\n                    code={this.state.flowCode}\n                />\n            </>\n        );\n    }\n}\n\nexport default Workspace;\n","import React from \"react\";\nimport styles from \"./Ide.module.css\";\nimport { Action } from \"./../components/Action/Action\";\nimport { SideTools } from \"./../components/SideTools/SideTools\";\nimport Workspace from \"./../components/Workspace/Workspace\";\nimport { DndProvider } from \"react-dnd\";\n\nconst initState = {\n  moeCode: \"\"\n}\n\nexport class Ide extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { ...initState };\n    this.addToCode = this.addToCode.bind(this);\n  }\n\n  addToCode(value) {\n    this.setState({\n      moeCode: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <main>\n          <div className={styles.sidebar}>\n            <div className={styles.logo}>\n              <img src=\"vms.png\" alt=\"VMS logo\" />\n            </div>\n            <div className={styles.tools}>\n              <SideTools />\n            </div>\n          </div>\n          <div className={styles.env}>\n            <div className={styles.actions}>\n              <Action code={this.state.moeCode} />\n            </div>\n            <div className={styles.workspace}>\n              <DndProvider>\n                <Workspace addToCode={this.addToCode} code={this.state.moeCode} />\n              </DndProvider>\n            </div>\n          </div>\n        </main>\n        <footer></footer>\n      </>\n    );\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Ide } from \"./pages/Ide\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport const App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Ide />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n"],"sourceRoot":""}